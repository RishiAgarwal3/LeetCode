class Solution:
    def isValid(self, s: str) -> bool:
        s = list(s)
        if len(s) % 2 != 0:
            return False
        if not (s.count("(") == s.count(")") and s.count("{") == s.count("}") and s.count("[") == s.count("]")):
            return False

        stack = []
        bracket_map = {')': '(', '}': '{', ']': '['}

        for char in s:
            if char in bracket_map.values():
                stack.append(char)
            elif char in bracket_map:
                if not stack or stack[-1] != bracket_map[char]:
                    return False
                stack.pop()

        return not stack
